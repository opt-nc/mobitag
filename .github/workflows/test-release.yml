name: 🎯 Test & release

on:
  push:
    branches: [main, develop]

permissions:
  id-token: write
  contents: write
  attestations: write

jobs:
  test-release:
    name: 🎯 Test & Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: 🚀 Setup Go
        uses: actions/setup-go@v5.4.0
      - name: 🧪 Generate the gif with vhs
        run: |
          sudo apt install ffmpeg -y
          go install github.com/charmbracelet/vhs@latest
          vhs mobitag-auth.tape
      # - uses: charmbracelet/vhs-action@59641cdc7fadf3978db65eb8c6937ea2752f4ec3
      #   with:
      #     path: 'mobitag-auth.tape'
      - uses: stefanzweifel/git-auto-commit-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commit_message: "feat: Update generated VHS GIF"
          commit_user_name: vhs-action 📼
          commit_user_email: actions@github.com
          commit_author: vhs-action 📼 <actions@github.com>
          file_pattern: '*.gif'
      - name: 📦 Semantic Release
        id: release
        uses: cycjimmy/semantic-release-action@0a51e81a6baff2acad3ee88f4121c589c73d0f0e
        with:
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: anchore/sbom-action/download-syft@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # installs syft
      - name: Run GoReleaser
        if: steps.release.outputs.new_release_published == 'true' # Run only if a new release was published
        uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLIC_HOMEBREW_TAP_TOKEN: ${{ secrets.PUBLIC_HOMEBREW_TAP_TOKEN }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2
        with:
          subject-checksums: ./dist/checksums.txt
        

      - name: 👍 Merge main back to dev
        if: github.ref == 'refs/heads/main' && steps.release.outputs.new_release_published == 'true'
        run: |
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git fetch
            git checkout develop
            git branch --set-upstream-to=origin/develop develop
            git pull
            git merge --no-ff main -m "Auto-merge main back to dev"
            git push

      - name: 🧹 Delete pre-releases
        if: github.ref == 'refs/heads/main' && steps.release.outputs.new_release_published == 'true'
        uses: dev-drprasad/delete-older-releases@dfbe6be2a006e9475dfcbe5b8d201f1824c2a9fe
        with:
          delete_tag_pattern: develop
          keep_latest: 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
